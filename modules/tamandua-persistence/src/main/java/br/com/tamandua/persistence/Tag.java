package br.com.tamandua.persistence;

// Generated 21/02/2010 23:04:42 by Hibernate Tools 3.2.4.GA

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Tag generated by hbm2java
 */
@Entity
@Table(name = "tag")
public class Tag implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    public static final String TYPE_STYLE = "STYLE";
    public static final String TYPE_FREESTYLE = "FREESTYLE";

    private Long idTag;
    private EntityDescriptor entityDescriptor;
    private String description;
    private String owner;
    private String name;
    private Long idEntity;
    private String type;

    public Tag() {
    }

    public Tag(EntityDescriptor entityDescriptor) {
        this.entityDescriptor = entityDescriptor;
    }

    public Tag(EntityDescriptor entityDescriptor, String description, String owner, String name, Long idEntity, String type) {
        this.entityDescriptor = entityDescriptor;
        this.description = description;
        this.owner = owner;
        this.name = name;
        this.idEntity = idEntity;
        this.type = type;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id_tag", unique = true, nullable = false)
    public Long getIdTag() {
        return this.idTag;
    }

    public void setIdTag(Long idTag) {
        this.idTag = idTag;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_entity_descriptor", nullable = false)
    public EntityDescriptor getEntityDescriptor() {
        return this.entityDescriptor;
    }

    public void setEntityDescriptor(EntityDescriptor entityDescriptor) {
        this.entityDescriptor = entityDescriptor;
    }

    @Column(name = "description", length = 400)
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Column(name = "owner", length = 6)
    public String getOwner() {
        return this.owner;
    }

    public void setOwner(String owner) {
        this.owner = owner;
    }

    @Column(name = "name", length = 50)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "id_entity")
    public Long getIdEntity() {
        return this.idEntity;
    }

    public void setIdEntity(Long idEntity) {
        this.idEntity = idEntity;
    }

    @Column(name = "type", length = 11)
    public String getType() {
        return this.type;
    }

    public void setType(String type) {
        this.type = type;
    }

    /* (non-Javadoc)
     * @see java.lang.Object#hashCode()
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((entityDescriptor == null) ? 0 : entityDescriptor.hashCode());
        result = prime * result + ((idEntity == null) ? 0 : idEntity.hashCode());
        result = prime * result + ((name == null) ? 0 : name.hashCode());
        return result;
    }

    /* (non-Javadoc)
     * @see java.lang.Object#equals(java.lang.Object)
     */
    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        Tag other = (Tag) obj;
        if (entityDescriptor == null) {
            if (other.entityDescriptor != null)
                return false;
        } else if (!entityDescriptor.equals(other.entityDescriptor))
            return false;
        if (idEntity == null) {
            if (other.idEntity != null)
                return false;
        } else if (!idEntity.equals(other.idEntity))
            return false;
        if (name == null) {
            if (other.name != null)
                return false;
        } else if (!name.equals(other.name))
            return false;
        return true;
    }
}
