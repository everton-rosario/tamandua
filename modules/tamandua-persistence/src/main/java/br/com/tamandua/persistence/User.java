package br.com.tamandua.persistence;

// Generated 21/02/2010 23:04:42 by Hibernate Tools 3.2.4.GA

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user")
public class User implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    private Long idUser;
    private String name;
    private Image image;
    private String email;
    private byte[] password;
    private String role;
    private String cpf;
    private String rg;
    private String street;
    private String city;
    private Integer streetNumber;
    private String streetComplement;
    private String state;
    private String country;
    private String status;
    private byte[] activationCode;
    private Set<Multimedia> multimedias = new HashSet<Multimedia>(0);
    private Set<Annotation> annotations = new HashSet<Annotation>(0);
    private Set<Moderation> moderations = new HashSet<Moderation>(0);

    public User() {
    }

    public User(String name, Image image, String email, byte[] password, String role, String cpf, String rg, String street,
    		String city, Integer streetNumber, String streetComplement, String state, String country, String status,  byte[] activationCode,
            Set<Multimedia> multimedias, Set<Annotation> annotations, Set<Moderation> moderations) {
        this.name = name;
    	this.image = image;
        this.email = email;
        this.password = password;
        this.role = role;
        this.cpf = cpf;
        this.rg = rg;
        this.street = street;
        this.city = city;
        this.streetNumber = streetNumber;
        this.streetComplement = streetComplement;
        this.state = state;
        this.country = country;
        this.status = status;
        this.activationCode = activationCode;
        this.multimedias = multimedias;
        this.annotations = annotations;
        this.moderations = moderations;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id_user", unique = true, nullable = false)
    public Long getIdUser() {
        return this.idUser;
    }

    public void setIdUser(Long idUser) {
        this.idUser = idUser;
    }

    @Column(name = "name", length = 255)
    public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "id_image")
    public Image getImage() {
        return this.image;
    }

    public void setImage(Image image) {
        this.image = image;
    }

    @Column(name = "email", length = 500)
    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    @Column(name = "password")
    public byte[] getPassword() {
        return this.password;
    }

    public void setPassword(byte[] password) {
        this.password = password;
    }

    @Column(name = "role", length = 12)
    public String getRole() {
        return this.role;
    }

    public void setRole(String role) {
        this.role = role;
    }

    @Column(name = "cpf", length = 50)
    public String getCpf() {
        return this.cpf;
    }

    public void setCpf(String cpf) {
        this.cpf = cpf;
    }

    @Column(name = "rg", length = 50)
    public String getRg() {
		return rg;
	}

	public void setRg(String rg) {
		this.rg = rg;
	}

	@Column(name = "street", length = 1000)
    public String getStreet() {
        return this.street;
    }

    public void setStreet(String street) {
        this.street = street;
    }

    @Column(name = "city", length = 500)
    public String getCity() {
        return this.city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    @Column(name = "street_number")
    public Integer getStreetNumber() {
        return this.streetNumber;
    }

    public void setStreetNumber(Integer streetNumber) {
        this.streetNumber = streetNumber;
    }

    @Column(name = "street_complement", length = 300)
    public String getStreetComplement() {
        return this.streetComplement;
    }

    public void setStreetComplement(String streetComplement) {
        this.streetComplement = streetComplement;
    }

    @Column(name = "state", length = 100)
    public String getState() {
        return this.state;
    }

    public void setState(String state) {
        this.state = state;
    }

    @Column(name = "country", length = 100)
    public String getCountry() {
        return this.country;
    }

    public void setCountry(String country) {
        this.country = country;
    }

    @Column(name = "status", length = 1)
    public String getStatus() {
		return status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "activation_code")
	public byte[] getActivationCode() {
		return activationCode;
	}

	public void setActivationCode(byte[] activationCode) {
		this.activationCode = activationCode;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
    public Set<Multimedia> getMultimedias() {
        return this.multimedias;
    }

    public void setMultimedias(Set<Multimedia> multimedias) {
        this.multimedias = multimedias;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
    public Set<Annotation> getAnnotations() {
        return this.annotations;
    }

    public void setAnnotations(Set<Annotation> annotations) {
        this.annotations = annotations;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
    public Set<Moderation> getModerations() {
        return this.moderations;
    }

    public void setModerations(Set<Moderation> moderations) {
        this.moderations = moderations;
    }

}
